// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  pages     Page[] // Um usuário pode ter várias páginas
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id         String      @id @default(uuid())
  title      String
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  components Component[] // Uma página pode ter vários componentes
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Component {
  id        String              @id @default(uuid())
  type      String // O tipo do componente (e.g., "Banner", "Carousel", "TextBox")
  pageId    String
  page      Page                @relation(fields: [pageId], references: [id])
  settings  ComponentSettings[] // Configurações personalizadas do componente
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model ComponentSettings {
  id          String    @id @default(uuid())
  componentId String
  component   Component @relation(fields: [componentId], references: [id])
  key         String // Nome do atributo (e.g., "color", "fontSize")
  value       String // Valor do atributo (e.g., "#FFFFFF", "16px")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
